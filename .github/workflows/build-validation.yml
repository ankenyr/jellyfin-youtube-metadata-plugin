name: build

on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'

env:
  DOTNET_VERSION: '8.0.104' # The .NET SDK version to use

jobs:
  build:
    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal
      # Tests need to be updated to not fail, so ignore for now but still run
      continue-on-error: true

    - name: Publish
      run: dotnet publish --configuration Release --no-restore --output bin

    - name: Package
      id: create_package
      shell: bash
      run: |
        tag=$(git describe --tags --always --first-parent)
        release_name="YoutubeMetadata-$tag"

        # Pack files
        7z a -tzip "${release_name}.zip" "./bin/*"

        # Set outputs
        printf -- '%s=%s\n' >> "${GITHUB_OUTPUT}" \
          'release_name' "${release_name}" \
          'release_tag' "${tag}" \
          'filepath' "${PWD}/${release_name}.zip" \
          'filename' "${release_name}.zip"

    - name: Build plugin zip with `jprm`
      id: create_plugin
      shell: bash
      run: |
        command -v pip
        pip install --user git+https://github.com/oddstr13/jellyfin-plugin-repository-manager
        declare -p PATH
        set -x

        find . -name project.assets.json -exec rm -v '{}' +
        _file="$(python3 -m jprm --verbosity=debug plugin build . --output='.')"

        # Set outputs
        printf -- '%s=%s\n' >> "${GITHUB_OUTPUT}" \
          'filepath' "${PWD}/${_file#./}" \
          'filename' "${_file#./}"

    - name: Checksums for `.zip` files
      shell: bash
      run: |
        python3 md5sum.py *.zip | tee MD5SUMS

    - uses: "marvinpinto/action-automatic-releases@latest"
      if: ${{ 'Linux' == runner.os }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        title: "${{ steps.create_package.outputs.release_tag }}"
        automatic_release_tag: "${{ steps.create_package.outputs.release_tag }}"
        prerelease: true
          #          "${{ steps.create_package.outputs.filename }}"
        files: |
          MD5SUMS
          *.zip
